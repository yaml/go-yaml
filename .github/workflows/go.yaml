name: Go

on:
  push:
    branches: [ main, v3, v2, v1 ]
  pull_request:
    branches: [ main, v3, v2, v1 ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: stable
    - uses: golangci/golangci-lint-action@v8
      with:
        version: v2.4
  go-versions:
    name: Lookup Go versions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
    - uses: actions/checkout@v5
    - uses: arnested/go-version-action@v1
      id: versions
  build-linux-amd64:
    runs-on: ubuntu-latest
    needs: go-versions
    continue-on-error: true   # make sure to run all versions, even if one fails
    strategy:
      fail-fast: false  # continue to run all jobs even if one fails
      matrix:
        go-version: ${{ fromJSON(needs.go-versions.outputs.matrix) }}
    name: >
      Build with Go ${{ matrix.go-version }}
      for linux/amd64
    steps:
    - uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}
    - name: Run go vet
      run: go vet ./...
    - name: Run yaml-test-suite tests
      run: make test-yts
    - name: Run go test with race detection
      run: go test -v -race .

  build-others:
    runs-on: ${{ matrix.os }}
    continue-on-error: true   # make sure to run all versions, even if one fails
    strategy:
      fail-fast: false  # continue to run all jobs even if one fails
      matrix:
        include:
        - {
          os: macos-latest,
          GOOS: darwin,
          GOARCH: amd64,
          test-args: -race
        }
        - {
          os: macos-latest,
          GOOS: darwin,
          GOARCH: arm64,
          test-args: -race
        }
        - {
          os: windows-latest,
          GOOS: windows,
          GOARCH: amd64,
          test-args: -race
        }
        - {
          os: ubuntu-latest,
          GOOS: linux,
          GOARCH: 386,
          test-args: ''  # race is not available on 32 bits architecture
        }
        - {
          os: windows-latest,
          GOOS: windows,
          GOARCH: 386,
          test-args: ''  # race is not available on 32 bits architecture
        }
    env:
      # GOARCH and GOOS are used by the Go toolchain
      GOARCH: ${{ matrix.GOARCH }}
      GOOS: ${{ matrix.GOOS }}
    name: >
      Build with Go stable
      for ${{ matrix.GOOS }}/${{ matrix.GOARCH }}
    steps:
    - uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: stable
    - name: Run go vet
      run: go vet ./...
    - name: Run yaml-test-suite tests
      run: make test-yts
      # make test-yts can only be run on non-Windows OS
      if: ${{ matrix.GOOS != 'windows' }}
      env:
        # This one is used by makeplus/makes
        OS-TYPE: ${{ matrix.GOOS }}
    - name: Run go test
      run: go test -v ${{ matrix.test-args }} .
